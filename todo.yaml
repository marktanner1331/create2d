ToolboxController:
    keyboard shortcuts:
    temp tools:
        if the color picker is open then switching to a temp tool will cause it close
        we should probably reopen its
        might also be hte case with other things

tools:
    image tool:
    rectangle:
    circle:
        ability to add cog teeth
    oval:
    curve:
        helper vertices, such as the control point for bexier splines
    polygon:
        including star
    line:
        need to sudivide lines
        insignificant vertices
            all this generic edge stuff is great
            but we might want to snap to the center of a circle
            we should farm out the insignificant logic decisions to the shapes
        lock to horizontal/vertical/diagonal
        length of line
            use canvas units (e.g. px or mm, inch, etc)
        fill
    select:
        need to merge/disconnect shapes

        deleting shapes shouldn't delete vertices that are used in other non-selected shapes

        need keyboard arrows for moving vertices

        vertex snapping tolerance needs to be calculated from the canvas scale
            right now its hardcoded in canvas space, so a smaller canvas would have stronger snapping than a larger one
        duplicate
    measure:
    partial circle:
    arrow:

Canvas:
    properties:
        rename CanvasSizeViewController to CanvasStyleViewController
            do the same to the CanvasPropertiesMixin
        ability to enter calculations into pixels per unit
            needs testing
        total vertices in document
            needs testing
        save defaults to a cookie (if consented)
            
        default paper sizes
        units view controller, change 'div' to 'view'
    resize boxes:
    snapping:
        when snapping to vertices is false, we probably shouldnt do the red dot overlays
        implement snap to shape in view
        test snap to shape
    drag box to select:
    canvas rulers:
    grid:
        bug with web_gl in console when zooming in and no grid is showing
            tricky to replicate
    
rendering:
    rendering lines that are connected and have the same properties should have their join styles joined better
        at the moment 'miter' and 'bevel' don't work
        this can be solved by implementing a new interface for anything that implements the line mixin
        maybe pass through a bool in renderToStageXL() which says don't paint paths
        leaving path painting to the very end
        i.e. the last path in the shape that has the same properties
        it will mean slightly slower rendering, but shouldn't be too bad
    try and fix the super low dpi that lines are rendered at

command palette:
    add more commands
        snapping properties
    after selecting radio button, quick command shortcut doesnt work

script runner:

undo/redo:
    ability to export these as scripts

html/css:
    rename the html ids for the canvasTabButton to just canvasButton and others
    try sass

refactor:
    rename draggable/draggableController for something more sensible (i.e. stageXL/html)
    do all events like MainWindow.onZoomChanged

color picker:
    color picker needs to use new resetPreviewColor() in all places (instead of manually setting the preview color)
    bug in deleting swatches
    
property windows:
    in NumberFieldWithLabel.dart
        keep a copy of the original value (at the point of a onFocus)
        if the user deletes the value and unfocuses - default back to the original value
    close buttons need some styling

layers:

prefabs:

menu items:
    clear canvas
    delete
    duplicate

settings:
    autocollapse property groups so that only one is open at a time
    hide quick commands after command has run
    should be able to save defaults
        also works for defaults for tools

saving:
    to image
    to svg
    to internal format

loading:
    from internal format

optimizations:
    when calculating insignificant vertices on lines we run the distanceToSegment code twice
        once as a hittest, once to get the point
        see if we can optimize that

bugs:
    select single vertex
    try and move it, it is jittery

misc:
    maybe get rid of some of the packages in the pubspec